{"version":3,"sources":["App.js","index.js"],"names":["Card","card","useState","item","setItem","random","num","Math","floor","useEffect","className","name","type","desc","card_images","map","img","index","src","image_url","onClick","App","setCard","loading","setLoading","error","message","setError","getter","a","fetch","response","status","Error","json","data","ReactDOM","render","document","getElementById"],"mappings":"qMA0CMA,EAAO,SAAC,GAAW,IAAVC,EAAS,EAATA,KACX,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAS,WACX,IAAMC,EAAMC,KAAKC,MAAoB,MAAdD,KAAKF,UAC5BD,EAAQH,EAAKK,KAKjB,OAHAG,qBAAU,WACNJ,MACF,IACEJ,GAGAE,EAIA,sBAAKO,UAAU,OAAf,UACI,6CAAgBP,EAAKQ,QACrB,wCAAWR,EAAKS,QAChB,8CAAiBT,EAAKU,QACtB,qBAAKH,UAAU,OAAf,SACCP,EAAKW,YAAYC,KAAI,SAACC,EAAIC,GACvB,OAAO,qBAAiBC,IAAKF,EAAIG,WAAhBF,QAGrB,8BACA,wBAAQG,QAASf,EAAjB,oCAhBG,MAsBAgB,EAvEH,WACZ,MAAuBnB,mBAAS,IAAhC,mBAAOD,EAAP,KAAYqB,EAAZ,KACA,EAA6BpB,oBAAS,GAAtC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAAyBtB,mBAAS,CAC9BuB,OAAM,EACNC,QAAQ,KAFZ,mBAAOD,EAAP,KAAaE,EAAb,KAIMC,EAAM,uCAAG,8BAAAC,EAAA,sEAEXL,GAAW,GAFA,SAGYM,MAAM,kDAHlB,UAIY,OADjBC,EAHK,QAICC,OAJD,sBAKL,IAAIC,MAAM,eALL,uBAOQF,EAASG,OAPjB,OAOLC,EAPK,OAQXb,EAAQa,EAAKA,MACbX,GAAW,GATA,kDAWXG,EAAS,CAACF,OAAM,EAAKC,QAAQ,KAAMA,UAXxB,0DAAH,qDAkBZ,OAJAjB,qBAAU,WACNmB,MACF,IAECH,EAAMA,MACE,6BAAKA,EAAMC,WAElBzB,GAAQsB,EACD,4CAGX,sBAAKb,UAAU,QAAf,UACI,iEACA,cAAC,EAAD,CAAMT,KAAMA,QC/BhBmC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7d235a06.chunk.js","sourcesContent":["import { Component, useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst App = () =>{\r\nconst [card,setCard] = useState(\"\")\r\nconst [loading,setLoading] = useState(false)\r\nconst [error,setError] = useState({\r\n    error:false,\r\n    message:\"\"\r\n})\r\nconst getter = async() =>{\r\n    try{\r\n    setLoading(true)\r\n    const response = await fetch(\"https://db.ygoprodeck.com/api/v7/cardinfo.php/\")\r\n    if(response.status !== 200){\r\n    throw new Error(\"not working\")\r\n    }\r\n    const data = await response.json()\r\n    setCard(data.data)\r\n    setLoading(false)\r\n    }catch (error) {\r\n    setError({error:true,message:error.message})\r\n    }\r\n}\r\nuseEffect(()=>{\r\n    getter()\r\n},[])\r\n\r\nif(error.error){\r\n    return <h1>{error.message}</h1>\r\n}\r\nif(!card || loading){\r\n    return <h1>loading...</h1>\r\n}\r\nreturn (\r\n<div className=\"heada\">\r\n    <h1>Random Yu-Gi-Oh! Card Generator</h1>\r\n    <Card card={card}/>\r\n</div>\r\n)\r\n}\r\n\r\nconst Card = ({card}) =>{\r\n    const [item,setItem] = useState(\"\")\r\n    const random = () =>{\r\n        const num = Math.floor(Math.random()*11624)\r\n        setItem(card[num])\r\n    }\r\n    useEffect(()=>{\r\n        random()\r\n    },[])\r\n    if(!card){\r\n        return null\r\n    }\r\n    if(!item){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <h2>Card Name: {item.name}</h2>\r\n            <h3>Type: {item.type}</h3>\r\n            <p>Description: {item.desc}</p>\r\n            <div className=\"imag\">\r\n            {item.card_images.map((img,index)=>{\r\n                return <img key={index} src={img.image_url}/>\r\n            })}\r\n            </div>\r\n            <div>\r\n            <button onClick={random}>Show another Card</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}